{"version":3,"sources":["features/cars/carSlice.js","components/Header.js","components/Section.js","components/Home.js","App.js","app/store.js","serviceWorker.js","index.js"],"names":["carSlice","createSlice","name","initialState","cars","reducers","selectCars","state","car","Header","useState","burgerState","setburgerState","useSelector","Container","src","alt","map","index","href","RightMenu","CustomMenu","onClick","BurgerNav","show","CloseWrapper","CustomClose","styled","div","Menu","MenuIcon","props","CloseIcon","Section","title","description","backgroundImg","leftButton","rightButton","Wrap","bgImg","bottom","ItemText","Buttons","ButtonGroup","LeftButton","RightButton","ArrowDown","img","Home","App","className","store","configureStore","reducer","carReducer","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.ab2139be.chunk.js","sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\n\nconst initialState = {\n    cars:[\"Model S\",\"Model 3\",\"Model X\",\"Model Y\"]\n}\n\nconst carSlice = createSlice({\n    name:\"car\",\n    initialState,\n    reducers:{}\n\n})\n\nexport const selectCars = state => state.car.cars\nexport default carSlice.reducer","import React,{useState} from 'react';\nimport styled from 'styled-components';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport CloseIcon from '@material-ui/icons/Close';\nimport {selectCars} from \"../features/cars/carSlice\";\nimport {useSelector} from \"react-redux\";\n\n\n\nfunction Header() {\n  \n    const [burgerState,setburgerState] = useState(false);\n    const cars = useSelector(selectCars);\n\n\n    return (\n        <div>\n           <Container>\n                <img src=\"/images/logo.svg\" alt=\"\" />\n          \n                <Menu>\n                    {cars && cars.map((car,index) => (\n                           <a key={index} href=\"#\">{car}</a>\n                    ))}\n           \n              \n           </Menu>\n           <RightMenu>\n           <a href=\"#\">Shop</a>\n            <a href=\"#\">Tesla Account</a>\n\n           <CustomMenu onClick={() =>setburgerState(true)}/>\n           </RightMenu>\n           <BurgerNav show={burgerState}>\n               <CloseWrapper >\n               <CustomClose onClick={() =>setburgerState(false)} />\n               </CloseWrapper>\n               {cars && cars.map((car,index) => (\n                               <li key={index}><a href=\"#\">{car}</a></li>\n                    ))}\n               <li><a href=\"#\">Existing Inventory</a></li>\n               <li><a href=\"#\">Existing Inventory</a></li>\n               <li><a href=\"#\">Existing Inventory</a></li>\n               <li><a href=\"#\">Existing Inventory</a></li>\n               <li><a href=\"#\">Existing Inventory</a></li>\n               <li><a href=\"#\">Existing Inventory</a></li>\n               <li><a href=\"#\">Existing Inventory</a></li>\n           </BurgerNav>\n\n        \n           </Container>\n          \n        </div>\n    )\n}\n\nexport default Header\n\nconst Container = styled.div`\n  min-height:30px;\n  position:fixed;\n  display:flex;\n  align-item:center;\n  justify-content:space-between;\n  padding: 5px 20px;\n  top:0;\n  left:0;\n  right:0;\n  z-index:1;\n\n`\n\nconst Menu = styled.div`\n display:flex;\n padding-top:10px;\n align-items:center;\n justify-content:center;\n flex:1;\n a{\n     font-weight:600;\n     color:black;\n     text-transform:uppercase;\n     padding:0 10px;\n     flex-wrap:nowrap;\n    }\n\n    @media(max-width:786px) {\n        display:none;\n    }\n\n`\nconst RightMenu = styled.div`\ndisplay:flex;\npadding-top:10px;\nalign-items:center;\na{\n    font-weight:600;\n    color:black;\n    text-transform:uppercase;\n    margin-right:10px;\n    flex-wrap:nowrap;\n   }\n`\nconst CustomMenu = styled(MenuIcon)`\n cursor:pointer;\n font-weight:600;\n\n`\nconst BurgerNav  = styled.div`\n right:0;\n position:fixed;\n top:0;\n bottom:0;\n background:white;\n width:300px;\n list-style:none;\n z-index:16;\n padding:20px;\n display:flex;\n flex-direction:column;\n text-align:start;\n transform: ${props => props.show ?'translateX(0)' : 'translateX(100%)'};\n transition:transform 0.3s ease-in;\n     li{\n       padding: 15px 0;\n       border-bottom: 1px solid rgba(0,0,0,.2);\n         a{\n             color:black;\n             font-weight:500;\n         }\n     }\n\n  \n`\nconst CustomClose = styled(CloseIcon)`\n cursor:pointer;\n`\nconst CloseWrapper = styled.div`\ndisplay:flex;\njustify-content:flex-end;\n`;","import React from 'react';\nimport styled from 'styled-components';\nimport Fade from 'react-reveal/Fade';\n\n\nfunction Section({title,description, backgroundImg,leftButton,rightButton}) {\n    return (\n        <Wrap bgImg={backgroundImg}>\n            <Fade bottom>\n          <ItemText>\n              <h1>{title}</h1>\n              <p>{description}</p>\n          </ItemText>\n          </Fade>\n          <Buttons>\n          <Fade bottom>\n          <ButtonGroup>\n              <LeftButton>\n                 {leftButton}\n              </LeftButton>\n              {rightButton && <RightButton>\n                {rightButton}\n              </RightButton>}\n              \n          </ButtonGroup>\n          </Fade>\n          <ArrowDown src=\"/images/down-arrow.svg\">\n\n          </ArrowDown>\n          </Buttons>\n\n        </Wrap>\n    )\n}\n\nexport default Section\n\nconst Wrap = styled.div`\n width:100vw;\n height:100vh;\n background-size:cover;\n background-position:center;\n background-repeat:no-repeat;\n background-image:url('/images/model-s.jpg');\n display:flex;\n flex-direction:column;\n justify-content:space-between; //for Vertical\n align-items:center; // for horizontal\n background-image: ${props => `url(\"/images/${props.bgImg}\")`}\n \n`\nconst ItemText = styled.div`\npadding-top:15vh;\ntext-align:center;\n`\nconst ButtonGroup = styled.div`\n display:flex;\n margin-bottom:30px;\n @media (max-width: 768px){\n     flex-direction:column;\n }\n`\nconst LeftButton = styled.div`\n    background-color:rgba(23,26,32,0.8);\n    height:40px;\n    width:256px;\n    color:white;\n    display:flex;\n    justify-content:center;\n    align-items:center;\n    border-radius:100px;\n    opacity:0.85;\n    text-transform: uppercase;\n    font-size:12px;\n    cursor:pointer;\n    margin:8px;\n`\nconst RightButton = styled(LeftButton)`\n background-color:white;\n opacity:0.65;\n color:black; \n`\n\nconst ArrowDown = styled.img`\n margin-top:20px;\n height:40px;\n animation:animateDown infinite 1.5s;\n margin-left:250px;\n\n \n \n`\nconst Buttons = styled.div``","import React from 'react';\nimport styled from 'styled-components';\nimport Section from './Section';\n\nfunction Home() {\n    return (\n       <Container>\n           <Section title=\"Model S\"\n            description=\"Order Onilne for Touchless Delivery\" \n            backgroundImg=\"model-s.jpg\"\n            leftButton=\"Custom order\"\n            rightButton=\"Existing Inventory\"\n            />\n            \n           <Section title=\"Model-Y\"\n            description=\"Order Onilne for Touchless Delivery\" \n            backgroundImg=\"model-y.jpg\"\n            leftButton=\"Custom order\"\n            rightButton=\"Existing Inventory\"\n           />\n            <Section  title=\"Model-3\"\n            description=\"Order Onilne for Touchless Delivery\" \n            backgroundImg=\"model-3.jpg\"\n            leftButton=\"Custom order\"\n            rightButton=\"Existing Inventory\"\n            />\n           <Section title=\"Model-X\"\n            description=\"Order Onilne for Touchless Delivery\" \n            backgroundImg=\"model-x.jpg\"\n            leftButton=\"Custom order\"\n            rightButton=\"Existing Inventory\" \n            />\n            <Section title=\"Lowest Cost Panels in America\"\n            description=\"Money-back guarentee\" \n            backgroundImg=\"solar-panel.jpg\"\n            leftButton=\"order now\"\n            rightButton=\"Learn more\" \n            />\n             <Section title=\"Solar for New Roofs\"\n            description=\"Solar Roof Costs Less Than a New Roof Plus Panels\" \n            backgroundImg=\"solar-roof.jpg\"\n            leftButton=\"order now\"\n            rightButton=\"Learn more\" \n            />\n            <Section title=\"Accessories\"\n            description=\"\" \n            backgroundImg=\"accessories.jpg\"\n            leftButton=\"Shop now\"\n            \n            /> \n       </Container>\n    )\n}\n\nexport default Home\nconst Container = styled.div`\nheight:100vh;\nwidth:100%;\n\n`","import React from 'react';\nimport './App.css';\nimport Header from './components/Header';\nimport Home from './components/Home';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n\n     \n       <Header />\n      <Home />\n  \n\n      \n\n    </div>\n  );\n}\n\nexport default App;\n\n\n","import { configureStore } from '@reduxjs/toolkit';\nimport carReducer from '../features/cars/carSlice';\n\nexport const store = configureStore({\n  reducer: {\n    car: carReducer,\n  },\n});\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then((registration) => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { store } from './app/store';\nimport { Provider } from 'react-redux';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}